{"version":3,"sources":["hooks/useTokenBalance.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.ts","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","utils/getTimePeriods.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","hooks/useApproval.ts","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","hooks/useAllowance.ts","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","a","cakeContract","getCakeContract","methods","call","supply","BigNumber","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","web3","useWeb3","contract","getBep20Contract","balanceOf","res","fetchBalance","useTokenBalance","account","useWeb3React","fastRefresh","Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","length","i","newCalls","slice","calldata","map","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","lotteryContract","price","numbersList","times","pow","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","Array","apply","options","address","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","eq","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","LOTTERY_TICKET_PRICE","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","useLottery","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","setInterval","prevMillis","clearInterval","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","size","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useCallback","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","props","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","TICKETS","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","width","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","useApproval","onPresentApprove","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","handleApprove","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","alignItems","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","LOTTERY_MAX_NUMBER_OF_TICKETS","e","currentTarget","Tips","num","Announce","Final","ModalActions","WarningModal","CardActions","TicketCard","allowance","setAllowance","useCake","getLotteryAddress","fetchAllowance","useLotteryAllowance","cakeBalance","getCakeAddress","ticketsLength","PurchaseWarningModal","tokenName","onPresentBuy","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","justifyContent","height","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","fetch","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","scale","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match1Ticket","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","oneTicketMatches","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","onItemClick","Divider","Provider"],"mappings":"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","file":"static/js/5.bab522b2.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n\r\n    fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { LOTTERY_TICKET_PRICE } from 'config'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { getMulticallAddress } from './addressHelpers'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finanltokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finanltokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finanltokenIds.length > 200) {\r\n    finanltokenIds = finanltokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finanltokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenids = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIndex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenids.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), new BigNumber(0))\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return new BigNumber(0)\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIndex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\r\n    return amount / 1e18 / LOTTERY_TICKET_PRICE\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport { getLotteryStatus } from 'utils/lotteryUtils'\r\n\r\n/**\r\n * Returns whether or not the current lottery has drawn numbers\r\n *\r\n * @return {Boolean}\r\n */\r\nconst useGetLotteryHasDrawn = () => {\r\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract) {\r\n      const fetchLotteryStatus = async () => {\r\n        const state = await getLotteryStatus(lotteryContract)\r\n        setLotteryHasDrawn(state)\r\n      }\r\n\r\n      fetchLotteryStatus()\r\n    }\r\n  }, [account, lotteryContract])\r\n\r\n  return lotteryHasDrawn\r\n}\r\n\r\nexport default useGetLotteryHasDrawn\r\n","import { useState, useEffect } from 'react'\r\n\r\nexport const useCurrentTime = () => {\r\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\r\n    }\r\n\r\n    const timerID = setInterval(() => tick(), 1000)\r\n\r\n    return () => clearInterval(timerID)\r\n  }, [])\r\n\r\n  return currentMillis\r\n}\r\n\r\nexport default useCurrentTime\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = seconds\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import getTimePeriods from 'utils/getTimePeriods'\r\n\r\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\r\nconst lotteryDrawHoursUtc = [2, 14]\r\n\r\nconst getClosestLotteryHour = (currentHour) => {\r\n  switch (true) {\r\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[0]\r\n    case currentHour < lotteryDrawHoursUtc[1]:\r\n      return lotteryDrawHoursUtc[1]\r\n    default:\r\n      return 0\r\n  }\r\n}\r\n\r\nconst getNextLotteryDrawTime = (currentMillis) => {\r\n  const date = new Date(currentMillis)\r\n  const currentHour = date.getUTCHours()\r\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\r\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\r\n  // ...and current time is between 02:00am & 23:59pm UTC\r\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\r\n  let millisTimeOfNextDraw\r\n\r\n  if (nextLotteryIsTomorrow) {\r\n    const tomorrow = new Date(currentMillis)\r\n    const nextDay = tomorrow.getUTCDate() + 1\r\n    tomorrow.setUTCDate(nextDay)\r\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  } else {\r\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\r\n  }\r\n\r\n  return millisTimeOfNextDraw\r\n}\r\n\r\n// @ts-ignore\r\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\r\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\r\n\r\nexport const getTicketSaleTime = (currentMillis): string => {\r\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\r\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getLotteryDrawTime = (currentMillis): string => {\r\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\r\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\r\n  return hoursAndMinutesString(hours, minutes)\r\n}\r\n\r\nexport const getTicketSaleStep = () => (1 / 12) * 100\r\n\r\nexport const getLotteryDrawStep = (currentMillis) => {\r\n  const msBetweenLotteries = 43200000\r\n  const endTime = getNextLotteryDrawTime(currentMillis)\r\n  const msUntilLotteryDraw = endTime - currentMillis\r\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\r\n  return 100 - percentageRemaining\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Progress } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport {\r\n  getLotteryDrawTime,\r\n  getLotteryDrawStep,\r\n  getTicketSaleTime,\r\n  getTicketSaleStep,\r\n} from '../helpers/CountdownHelpers'\r\n\r\nconst ProgressWrapper = styled.div`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst TopTextWrapper = styled.div`\r\n  margin-top: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst BottomTextWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n`\r\n\r\nconst StyledPrimaryText = styled(Text)`\r\n  margin-right: 16px;\r\n`\r\nconst LotteryProgress = () => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\r\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\r\n\r\n  return (\r\n    <ProgressWrapper>\r\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\r\n      <TopTextWrapper>\r\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\r\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\r\n        </StyledPrimaryText>\r\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\r\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\r\n        </Text>\r\n      </TopTextWrapper>\r\n      {lotteryHasDrawn && (\r\n        <BottomTextWrapper>\r\n          <Text color=\"invertedContrast\">\r\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\r\n          </Text>\r\n        </BottomTextWrapper>\r\n      )}\r\n    </ProgressWrapper>\r\n  )\r\n}\r\n\r\nexport default LotteryProgress\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport Container from 'components/layout/Container'\r\nimport LotteryProgress from './LotteryProgress'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst Blurb = styled(Text)`\r\n  color: #ffffff;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst RightWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex: 1;\r\n  padding-left: 0;\r\n  margin-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n    padding-left: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{TranslateString(708, 'The CAKE Lottery')}</Title>\r\n          <Blurb>{TranslateString(710, 'Buy tickets with CAKE')}</Blurb>\r\n          <Blurb>{TranslateString(712, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\r\n        </LeftWrapper>\r\n        <RightWrapper>\r\n          <LotteryProgress />\r\n        </RightWrapper>\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  background-color: ${({ theme }) => theme.colors.textSubtle};\r\n  height: 1px;\r\n  margin: 0 auto 32px;\r\n  width: 100%;\r\n`\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(new BigNumber(0))\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\r\n\r\n  return { claimLoading, claimAmount }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winngNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbaers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const TranslateString = useI18n()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`, { TICKETS: myTicketNumbers.length })}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {TranslateString(438, 'Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\nconst PrizesWonContent: React.FC = () => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {TranslateString(660, 'You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              CAKE\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\r\n          {TranslateString(1056, 'Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {TranslateString(432, 'View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{TranslateString(726, 'Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {TranslateString(432, 'View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst YourPrizesCard: React.FC = () => {\r\n  const { claimAmount } = useTotalClaim()\r\n\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper>\r\n        <StyledHeading size=\"md\">{TranslateString(1080, 'Unlock wallet to access lottery')}</StyledHeading>\r\n        <UnlockButton />\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import { useCallback, useState } from 'react'\r\nimport { useLotteryApprove } from './useApprove'\r\n\r\nexport const useApproval = (onPresentApprove: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { onApprove } = useLotteryApprove()\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const txHash = await onApprove()\r\n      // user rejected tx or didn't go thru\r\n      if (!txHash) {\r\n        setRequestedApproval(false)\r\n      }\r\n      onPresentApprove()\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, onPresentApprove])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport default useApproval\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Flex, Input, InputProps } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\n\r\ninterface TokenInputProps extends InputProps {\r\n  max: number | string\r\n  symbol: string\r\n  availableSymbol: string\r\n  value: string\r\n  onSelectMax?: () => void\r\n  onChange: (evt: React.FormEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <StyledTokenInput>\r\n      <Flex alignItems=\"center\">\r\n        <Input onChange={onChange} placeholder=\"0\" value={value} />\r\n        <StyledTokenAdornmentWrapper>\r\n          <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\r\n          <StyledSpacer />\r\n          <div>\r\n            <Button size=\"sm\" onClick={onSelectMax}>\r\n              {TranslateString(452, 'Max')}\r\n            </Button>\r\n          </div>\r\n        </StyledTokenAdornmentWrapper>\r\n      </Flex>\r\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\r\n    </StyledTokenInput>\r\n  )\r\n}\r\n\r\nconst StyledTokenInput = styled.div``\r\n\r\nconst StyledSpacer = styled.div`\r\n  width: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledTokenAdornmentWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst StyledMaxText = styled.div`\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.primary};\r\n  display: flex;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  height: 44px;\r\n  justify-content: flex-end;\r\n`\r\n\r\nconst StyledTokenSymbol = styled.span`\r\n  color: ${(props) => props.theme.colors.primary};\r\n  font-weight: 700;\r\n`\r\n\r\nexport default TicketInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport TicketInput from 'components/TicketInput'\r\nimport ModalActions from 'components/ModalActions'\r\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { LOTTERY_MAX_NUMBER_OF_TICKETS, LOTTERY_TICKET_PRICE } from 'config'\r\n\r\ninterface BuyTicketModalProps {\r\n  max: BigNumber\r\n  onConfirm?: (amount: string, numbers: Array<number>) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\r\n  const [val, setVal] = useState('1')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [, setRequestedBuy] = useState(false)\r\n  const TranslateString = useI18n()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const maxTickets = useMemo(() => {\r\n    return parseInt(getFullDisplayBalance(max.div(LOTTERY_TICKET_PRICE)), 10)\r\n  }, [max])\r\n\r\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\r\n\r\n  const { onMultiBuy } = useMultiBuyLottery()\r\n  const maxNumber = useMaxNumber()\r\n  const handleBuy = useCallback(async () => {\r\n    try {\r\n      setRequestedBuy(true)\r\n      const length = parseInt(val)\r\n      // @ts-ignore\r\n      // eslint-disable-next-line prefer-spread\r\n      const numbers = Array.apply(null, { length }).map(() => [\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n        Math.floor(Math.random() * maxNumber) + 1,\r\n      ])\r\n      const txHash = await onMultiBuy(LOTTERY_TICKET_PRICE.toString(), numbers)\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        setRequestedBuy(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    if (Number(maxTickets) > LOTTERY_MAX_NUMBER_OF_TICKETS) {\r\n      setVal(LOTTERY_MAX_NUMBER_OF_TICKETS.toString())\r\n    } else {\r\n      setVal(maxTickets.toString())\r\n    }\r\n  }, [maxTickets])\r\n\r\n  const cakeCosts = (amount: string): number => {\r\n    return +amount * LOTTERY_TICKET_PRICE\r\n  }\r\n  return (\r\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\r\n      <TicketInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol=\"TICKET\"\r\n        availableSymbol=\"CAKE\"\r\n      />\r\n      <div>\r\n        <Tips>{TranslateString(999, `1 Ticket = ${LOTTERY_TICKET_PRICE} CAKE`, { num: LOTTERY_TICKET_PRICE })}</Tips>\r\n      </div>\r\n      <div>\r\n        <Announce>\r\n          {TranslateString(\r\n            478,\r\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\r\n          )}\r\n        </Announce>\r\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\r\n      </div>\r\n      <ModalActions>\r\n        <Button width=\"100%\" variant=\"secondary\" onClick={onDismiss}>\r\n          {TranslateString(462, 'Cancel')}\r\n        </Button>\r\n        <Button\r\n          id=\"lottery-buy-complete\"\r\n          width=\"100%\"\r\n          disabled={\r\n            pendingTx ||\r\n            parseInt(val) > Number(maxTickets) ||\r\n            parseInt(val) > LOTTERY_MAX_NUMBER_OF_TICKETS ||\r\n            parseInt(val) < 1\r\n          }\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await handleBuy()\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BuyTicketModal\r\n\r\nconst Tips = styled.div`\r\n  margin-left: 0.4em;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst Final = styled.div`\r\n  margin-top: 1em;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\nconst Announce = styled.div`\r\n  margin-top: 1em;\r\n  margin-left: 0.4em;\r\n  color: #ed4b9e;\r\n`\r\n","import React from 'react'\r\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\r\nimport ModalActions from 'components/ModalActions'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\r\n        <br />\r\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\r\n        <br />\r\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burned after the draw.')}\r\n        <br />\r\n        {TranslateString(\r\n          474,\r\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\r\n        )}\r\n      </TicketsList>\r\n      <ModalActions>\r\n        <Button width=\"100%\" onClick={onDismiss}>\r\n          {TranslateString(476, 'I understand')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: left;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nexport default WarningModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport { useLotteryAllowance } from 'hooks/useAllowance'\r\nimport useTickets from 'hooks/useTickets'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { useApproval } from 'hooks/useApproval'\r\nimport BuyTicketModal from './BuyTicketModal'\r\nimport MyTicketsModal from './UserTicketsModal'\r\nimport PurchaseWarningModal from './PurchaseWarningModal'\r\n\r\nconst CardActions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    justify-content: space-between;\r\n  }\r\n`\r\n\r\nconst TicketCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n  const allowance = useLotteryAllowance()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\r\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\r\n  const { handleApprove, requestedApproval } = useApproval(onPresentApprove)\r\n\r\n  const renderLotteryTicketButtons = () => {\r\n    if (!allowance.toNumber()) {\r\n      return (\r\n        <>\r\n          <Button width=\"100%\" disabled>\r\n            {TranslateString(432, 'View your tickets')}\r\n          </Button>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\r\n            {TranslateString(494, 'Approve CAKE')}\r\n          </Button>\r\n        </>\r\n      )\r\n    }\r\n    return (\r\n      <>\r\n        <Button\r\n          style={{ marginRight: '8px' }}\r\n          width=\"100%\"\r\n          disabled={ticketsLength === 0}\r\n          variant=\"secondary\"\r\n          onClick={onPresentMyTickets}\r\n        >\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n        <Button id=\"lottery-buy-start\" width=\"100%\" onClick={onPresentBuy}>\r\n          {TranslateString(430, 'Buy ticket')}\r\n        </Button>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <CardActions>\r\n      {lotteryHasDrawn ? (\r\n        <Button disabled> {TranslateString(874, 'On sale soon')}</Button>\r\n      ) : (\r\n        renderLotteryTicketButtons()\r\n      )}\r\n    </CardActions>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Contract } from 'web3-eth-contract'\r\nimport { getLotteryAddress } from 'utils/addressHelpers'\r\nimport { useCake } from './useContract'\r\nimport useRefresh from './useRefresh'\r\n\r\n// Retrieve lottery allowance\r\nexport const useLotteryAllowance = () => {\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchAllowance = async () => {\r\n      const res = await cakeContract.methods.allowance(account, getLotteryAddress()).call()\r\n      setAllowance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      fetchAllowance()\r\n    }\r\n  }, [account, cakeContract, fastRefresh])\r\n\r\n  return allowance\r\n}\r\n\r\n// Retrieve IFO allowance\r\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any): BigNumber => {\r\n  const { account } = useWeb3React()\r\n  const [allowance, setAllowance] = useState(new BigNumber(0))\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\r\n        setAllowance(new BigNumber(res))\r\n      } catch (e) {\r\n        console.error(e)\r\n      }\r\n    }\r\n    fetch()\r\n  }, [account, spenderAddress, tokenContract, dependency])\r\n\r\n  return allowance\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, TicketRound, Text, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\nimport useTickets from 'hooks/useTickets'\r\nimport { useCurrentTime } from 'hooks/useTimer'\r\nimport TicketActions from './TicketActions'\r\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\r\n\r\ninterface CardProps {\r\n  isSecondCard?: boolean\r\n}\r\n\r\nconst StyledCard = styled(Card)<CardProps>`\r\n  ${(props) =>\r\n    props.isSecondCard\r\n      ? `  \r\n        margin-top: 16px;\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\nconst CardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst TicketCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\r\n  const TranslateString = useI18n()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n\r\n  const tickets = useTickets()\r\n  const ticketsLength = tickets.length\r\n\r\n  const currentMillis = useCurrentTime()\r\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\r\n\r\n  return (\r\n    <StyledCard isSecondCard={isSecondCard}>\r\n      <CardBody>\r\n        <CardHeader>\r\n          <IconWrapper>\r\n            <TicketRound />\r\n          </IconWrapper>\r\n          {lotteryHasDrawn ? (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(870, 'Until ticket sale:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\r\n            </TicketCountWrapper>\r\n          ) : (\r\n            <TicketCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(724, 'Your tickets for this round')}\r\n              </Text>\r\n              <Heading size=\"lg\">{ticketsLength}</Heading>\r\n            </TicketCountWrapper>\r\n          )}\r\n        </CardHeader>\r\n        <TicketActions />\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  oneTicketMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(756, 'No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {TranslateString(754, 'Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {TranslateString(752, 'Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem>\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","import React, { useContext, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Card, CardBody, CardFooter, Text, PancakeRoundIcon, Flex, Skeleton } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useTotalRewards } from 'hooks/useTickets'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\r\nimport PrizeGrid from '../PrizeGrid'\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Right = styled.div`\r\n  display: flex;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Left = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst PrizeCountWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\r\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    height: 100%;\r\n  }\r\n`\r\n\r\nconst TotalPrizesCard = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const [showFooter, setShowFooter] = useState(false)\r\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\r\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\r\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        {account && (\r\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\r\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\r\n            {currentLotteryNumber > 0 && (\r\n              <>\r\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>\r\n                  {TranslateString(720, `Round #${currentLotteryNumber}`, { num: currentLotteryNumber })}\r\n                </Text>\r\n              </>\r\n            )}\r\n          </Flex>\r\n        )}\r\n        <CardHeading>\r\n          <Left>\r\n            <IconWrapper>\r\n              <PancakeRoundIcon />\r\n            </IconWrapper>\r\n            <PrizeCountWrapper>\r\n              <Text fontSize=\"14px\" color=\"textSubtle\">\r\n                {TranslateString(722, 'Total Pot:')}\r\n              </Text>\r\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\r\n            </PrizeCountWrapper>\r\n          </Left>\r\n          <Right>\r\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\r\n          </Right>\r\n        </CardHeading>\r\n      </CardBody>\r\n      <ExpandingWrapper showFooter={showFooter}>\r\n        <CardFooter>\r\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\r\n        </CardFooter>\r\n      </ExpandingWrapper>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default TotalPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Image, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\r\n\r\nconst WinningNumbers: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n  const winNumbers = useWinningNumbers()\r\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\r\n  const MatchedNumber4 = useMatchingRewardLength(4)\r\n  const MatchedNumber3 = useMatchingRewardLength(3)\r\n  const MatchedNumber2 = useMatchingRewardLength(2)\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <CardWrapper>\r\n      <Card>\r\n        <CardBody>\r\n          <StyledCardContentInner>\r\n            <StyledCardHeader>\r\n              <Title>\r\n                {account && lotteryHasDrawn\r\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\r\n                  : TranslateString(572, 'Latest Winning Numbers')}\r\n              </Title>\r\n              <br />\r\n            </StyledCardHeader>\r\n            <Row>\r\n              {winNumbers.map((number, index) => (\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                <TicketNumberBox key={index}>\r\n                  <CenteredText>{number}</CenteredText>\r\n                </TicketNumberBox>\r\n              ))}\r\n            </Row>\r\n            <RabbitRow>\r\n              <RabbitBox>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n              <RabbitBox>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBox>\r\n            </RabbitRow>\r\n            <RabbitRowSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImageFirst>\r\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\r\n                </CardImageFirst>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n              <RabbitBoxSmall>\r\n                <CardImage style={{ marginLeft: '-1.2em' }}>\r\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\r\n                </CardImage>\r\n              </RabbitBoxSmall>\r\n            </RabbitRowSmall>\r\n            <Column>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber4}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber3}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n              <RowNoPadding>\r\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\r\n                <CenteredTextWithPadding>\r\n                  <strong>{MatchedNumber2}</strong>\r\n                </CenteredTextWithPadding>\r\n              </RowNoPadding>\r\n            </Column>\r\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\r\n              {TranslateString(448, 'Export recent winning numbers')}\r\n            </Link>\r\n          </StyledCardContentInner>\r\n        </CardBody>\r\n      </Card>\r\n    </CardWrapper>\r\n  )\r\n}\r\nconst Link = styled.a`\r\n  margin-top: 1em;\r\n  text-decoration: none;\r\n  color: #25beca;\r\n`\r\n\r\nconst Row = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RabbitRow = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst RabbitRowSmall = styled.div`\r\n  margin-top: -2.3em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst CardImage = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst CardImageFirst = styled.div`\r\n  text-align: center;\r\n  margin-left: -1.2em;\r\n\r\n  @media (max-width: 600) {\r\n    margin-left: -0.2em;\r\n  }\r\n`\r\n\r\nconst RowNoPadding = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst Column = styled.div`\r\n  margin-top: 1em;\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CenteredText = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n`\r\n\r\nconst CenteredTextWithPadding = styled.div`\r\n  text-align: center;\r\n  align-items: center;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n`\r\n\r\nconst TicketNumberBox = styled.div`\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\r\n  color: white;\r\n  font-size: 20px;\r\n  font-weight: 900;\r\n  margin: 10px;\r\n  margin-bottom: 7px;\r\n  width: 40px;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 40px;\r\n    margin: 20px;\r\n    width: 60px;\r\n  }\r\n`\r\n\r\nconst RabbitBox = styled.div`\r\n  /* padding: 10px; */\r\n  border-radius: 12px;\r\n  margin: 16px 20px;\r\n  width: 60px;\r\n`\r\n\r\nconst RabbitBoxSmall = styled.div`\r\n  padding-top: 10px;\r\n  padding-left: 10px;\r\n  border-radius: 12px;\r\n  margin: 20px;\r\n  width: 20px;\r\n`\r\n\r\nconst StyledCardHeader = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst CardWrapper = styled.div``\r\n\r\nconst Title = styled.div`\r\n  color: ${(props) => props.theme.colors.secondary};\r\n  font-size: 24px;\r\n  width: 50vw;\r\n  text-align: center;\r\n  font-weight: 1000;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport default WinningNumbers\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Heading, Link, Image } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst LayoutWrapper = styled.div`\r\n  max-width: 500px;\r\n  margin: 0 auto 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst StyledImage = styled(Image)`\r\n  align-self: center;\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  align-self: center;\r\n  margin-top: 16px;\r\n`\r\n\r\nconst HowItWorks = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <LayoutWrapper>\r\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\r\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\r\n        {TranslateString(632, 'How it works')}\r\n      </StyledHeading>\r\n      <Text fontSize=\"16px\">\r\n        {TranslateString(\r\n          999,\r\n          'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\r\n        )}\r\n      </Text>\r\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink>\r\n    </LayoutWrapper>\r\n  )\r\n}\r\n\r\nexport default HowItWorks\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport YourPrizesCard from './components/YourPrizesCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\nimport TicketCard from './components/TicketCard'\r\nimport TotalPrizesCard from './components/TotalPrizesCard'\r\nimport WinningNumbers from './components/WinningNumbers'\r\nimport HowItWorks from './components/HowItWorks'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\r\n`\r\n\r\nconst NextDrawPage: React.FC = () => {\r\n  const { account } = useWeb3React()\r\n  const { claimAmount } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  return (\r\n    <>\r\n      <Cards>\r\n        <div>\r\n          <TotalPrizesCard />\r\n        </div>\r\n        <SecondCardColumnWrapper isAWin={isAWin}>\r\n          {!account ? (\r\n            <UnlockWalletCard />\r\n          ) : (\r\n            <>\r\n              <YourPrizesCard />\r\n              <TicketCard isSecondCard={isAWin} />\r\n            </>\r\n          )}\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n      <HowItWorks />\r\n      {/* legacy page content */}\r\n      <WinningNumbers />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NextDrawPage\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match1Ticket: number | null\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n  poolMatch1: number | null\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const TranslateString = useI18n()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n    // The max value will always be the initialLotterNumber which equals\r\n    // the latest lottery round\r\n    setIsError(value > initialLotteryNumber)\r\n    setLotteryNumber(value)\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{TranslateString(742, 'Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <Input\r\n            value={lotteryNumber}\r\n            type=\"number\"\r\n            isWarning={isError}\r\n            max={initialLotteryNumber}\r\n            onChange={handleChange}\r\n          />\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\r\n              {TranslateString(744, 'Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from '@pancakeswap-libs/uikit'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const TranslateString = useI18n()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div>\r\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\r\n          {TranslateString(432, 'View your tickets')}\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <ExternalLinkWrap href={contractLink}>{TranslateString(356, 'View on BscScan')}</ExternalLinkWrap>\r\n      </div>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const TranslateString = useI18n()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match1Ticket,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {TranslateString(999, 'Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading\r\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\r\n              Icon={PancakeRoundIcon}\r\n            >\r\n              {TranslateString(999, 'Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            oneTicketMatches={match1Ticket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from '@pancakeswap-libs/uikit'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport useI18n from 'hooks/useI18n'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const TranslateString = useI18n()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: TranslateString(1076, 'The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: TranslateString(1078, 'Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst HistoryChart: React.FC = () => {\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    return historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#1FC7D4' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 14,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = {\r\n    legend: { display: false },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left',\r\n          id: 'y-axis-pool',\r\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\r\n        },\r\n        {\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'right',\r\n          id: 'y-axis-burned',\r\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\r\n        },\r\n      ],\r\n    },\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>Error fetching data</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Line data={chartData} options={options} type=\"line\" />\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 36px 0 28px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{TranslateString(748, 'Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{TranslateString(750, 'Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React from 'react'\r\nimport { Heading, Card, CardBody } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{TranslateString(746, 'History')}</Heading>\r\n        <Legend />\r\n        <HistoryChart />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst BunnyImageWrapper = styled.div`\r\n  display: flex;\r\n  margin-top: 32px;\r\n  justify-content: center;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <Cards>\r\n      <PastLotteryRoundViewer />\r\n      <SecondCardColumnWrapper>\r\n        <PastDrawsHistoryCard />\r\n        <BunnyImageWrapper>\r\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\r\n        </BunnyImageWrapper>\r\n      </SecondCardColumnWrapper>\r\n    </Cards>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport Divider from './components/Divider'\r\nimport NextDrawPage from './NextDrawPage'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 32px;\r\n`\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const TranslateString = useI18n()\r\n  const [activeIndex, setActiveIndex] = useState(0)\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [lotteryContract])\r\n\r\n  const handleClick = (index) => {\r\n    setActiveIndex(index)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <Wrapper>\r\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\r\n            <ButtonMenuItem>{TranslateString(716, 'Next draw')}</ButtonMenuItem>\r\n            <ButtonMenuItem>{TranslateString(718, 'Past draws')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n        </Wrapper>\r\n        <Divider />\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n"],"sourceRoot":""}